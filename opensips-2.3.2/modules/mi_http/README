mi_http Module

Ovidiu Sas

   <osas@voipembedded.com>

Edited by

Ovidiu Sas

   Copyright Â© 2011-2013 VoIP Embedded, Inc.
   Revision History
   Revision $Rev: 8688 $ $Date$
     __________________________________________________________

   Table of Contents

   1. Admin Guide

        1.1. Overview
        1.2. To-do
        1.3. Dependencies

              1.3.1. OpenSIPS Modules

        1.4. Exported Parameters

              1.4.1. mi_http_root(string)
              1.4.2. mi_http_method(integer)
              1.4.3. trace_destination (string)
              1.4.4. trace_bwlist (string)

        1.5. Exported Functions
        1.6. Known issues

   List of Examples

   1.1. Set mi_http_root parameter
   1.2. Set mi_http_method parameter
   1.3. Set trace_destination parameter
   1.4. Set trace_destination parameter

Chapter 1. Admin Guide

1.1. Overview

   This module provides an HTTP transport layer implementation for
   OpenSIPS's Management Interface.

1.2. To-do

   Features to be added in the future:
     * possibility to authenticate connections.

1.3. Dependencies

1.3.1. OpenSIPS Modules

   The following modules must be loaded before this module:
     * httpd module.

1.4. Exported Parameters

1.4.1. mi_http_root(string)

   Specifies the root path for mi http requests. The link to the
   mi web interface must be constructed using the following
   patern: http://[opensips_IP]:[opensips_mi_port]/[mi_http_root]

   The default value is "mi".

   Example 1.1. Set mi_http_root parameter
...
modparam("mi_http", "mi_http_root", "opensips_mi")
...

1.4.2. mi_http_method(integer)

   Specifies the HTTP request method to be used:
     * 0 - use GET HTTP request
     * 1 - use POST HTTP request

   The default value is 0.

   Example 1.2. Set mi_http_method parameter
...
modparam("mi_http", "mi_http_method", 1)
...

1.4.3. trace_destination (string)

   Trace destination as defined in the tracing module. Currently
   the only tracing module is proto_hep. This is where traced mi
   messages will go.

   WARNING: A tracing module must be loaded in order for this
   parameter to work. (for example proto_hep).

   Default value is none(not defined).

   Example 1.3. Set trace_destination parameter
...
modparam("proto_hep", "trace_destination", "[hep_dest]10.0.0.2;transport
=tcp;version=3")

modparam("mi_http", "trace_destination", "hep_dest")
...

1.4.4. trace_bwlist (string)

   Filter traced mi commands based on a blacklist or a whitelist.
   trace_destination must be defined for this parameter to have
   any purpose. Whitelists can be defined using 'w' or 'W',
   blacklists using 'b' or 'B'. The type is separate by the actual
   blacklist by ':'. The mi commands in the list must be separated
   by ','.

   Defining a blacklists means all the commands that are not
   blacklisted will be traced. Defining a whitelist means all the
   commands that are not whitelisted will not be traced. WARNING:
   One can't define both a whitelist and a blacklist. Only one of
   them is allowed. Defining the parameter a second time will just
   overwrite the first one.

   WARNING: A tracing module must be loaded in order for this
   parameter to work. (for example proto_hep).

   Default value is none(not defined).

   Example 1.4. Set trace_destination parameter
...
## blacklist ps and which mi commands
## all the other commands shall be traced
modparam("mi_http", "trace_bwlist", "b: ps, which")
...
## allow only sip_trace mi command
## all the other commands will not be traced
modparam("mi_http", "trace_bwlist", "w: sip_trace")
...

1.5. Exported Functions

   No function exported to be used from configuration file.

1.6. Known issues

   Commands with large responses (like ul_dump) will fail if the
   configured size of the httpd buffer is to small (or if there
   isn't enough pkg memory configured).

   Future realeases of the httpd and mi_httpd modules will address
   this issue.
