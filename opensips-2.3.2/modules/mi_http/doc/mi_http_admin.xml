<!-- Module User's Guide -->

<chapter>

	<title>&adminguide;</title>

	<section>
	<title>Overview</title>
	<para>
		This module provides an HTTP transport layer implementation
		for &osips;'s Management Interface.
	</para>
	</section>

	<section>
	<title>To-do</title>
		<para>
		Features to be added in the future:
		</para>
		<itemizedlist>
			<listitem><para>
			possibility to authenticate connections.
			</para></listitem>
		</itemizedlist>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>httpd</emphasis> module.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>

	<section>
	<title>Exported Parameters</title>
	<section>
		<title><varname>mi_http_root</varname>(string)</title>
		<para>
		Specifies the root path for mi http requests.
		The link to the mi web interface must be constructed
		using the following patern:
		http://[opensips_IP]:[opensips_mi_port]/[mi_http_root]
		</para>
		<para>
		<emphasis>The default value is "mi".</emphasis>
		</para>
		<example>
		<title>Set <varname>mi_http_root</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("mi_http", "mi_http_root", "opensips_mi")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>mi_http_method</varname>(integer)</title>
		<para>
		Specifies the HTTP request method to be used:
		<itemizedlist>
			<listitem><para>0 - use GET HTTP request</para></listitem>
			<listitem><para>1 - use POST HTTP request</para></listitem>
		</itemizedlist>
		</para>
		<para>
		<emphasis>The default value is 0.</emphasis>
		</para>
		<example>
		<title>Set <varname>mi_http_method</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("mi_http", "mi_http_method", 1)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>trace_destination</varname> (string)</title>
		<para>
			Trace destination as defined in the tracing module. Currently
		the only tracing module is <emphasis role="bold">proto_hep</emphasis>.
		This is where traced mi messages will go.
		</para>
		<para>
			<emphasis role="bold">WARNING: </emphasis>A tracing module must be
			loaded in order for this parameter to work. (for example
			<emphasis role="bold">proto_hep</emphasis>).
		</para>
		<para>
		<emphasis>
			Default value is none(not defined).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>trace_destination</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("proto_hep", "trace_destination", "[hep_dest]10.0.0.2;transport=tcp;version=3")

modparam("mi_http", "trace_destination", "hep_dest")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>trace_bwlist</varname> (string)</title>
		<para>
			Filter traced mi commands based on a blacklist or a whitelist.
		<emphasis role="bold">trace_destination</emphasis> must be defined for
		this parameter to have any purpose. Whitelists can be defined using
		'w' or 'W', blacklists using 'b' or 'B'. The type is separate by the
		actual blacklist by ':'. The mi commands in the list must be separated
		by ','.
		</para>
		<para>
			Defining a blacklists means all the commands that are not blacklisted
			will be traced. Defining a whitelist means all the commands that are
			not whitelisted will not be traced.
			<emphasis role="bold">WARNING: </emphasis> One can't define both
			a whitelist and a blacklist. Only one of them is allowed. Defining
			the parameter a second time will just overwrite the first one.
		</para>
		<para>
			<emphasis role="bold">WARNING: </emphasis>A tracing module must be
			loaded in order for this parameter to work. (for example
			<emphasis role="bold">proto_hep)</emphasis>.
		</para>
		<para>
		<emphasis>
			Default value is none(not defined).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>trace_destination</varname> parameter</title>
		<programlisting format="linespecific">
...
## blacklist ps and which mi commands
## all the other commands shall be traced
modparam("mi_http", "trace_bwlist", "b: ps, which")
...
## allow only sip_trace mi command
## all the other commands will not be traced
modparam("mi_http", "trace_bwlist", "w: sip_trace")
...
</programlisting>
		</example>
	</section>



	</section>

	<section>
	<title>Exported Functions</title>
		<para>
		No function exported to be used from configuration file.
		</para>
	</section>

	<section>
	<title>Known issues</title>
		<para>
		Commands with large responses (like ul_dump) will fail if the
		configured size of the httpd buffer is to small (or if there isn't
		enough pkg memory configured).
		</para>
		<para>
		Future realeases of the httpd and mi_httpd modules will address this issue.
		</para>
	</section>

</chapter>

